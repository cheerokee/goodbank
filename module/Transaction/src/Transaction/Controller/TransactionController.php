<?php

namespace Transaction\Controller;

use Base\Controller\CrudController;
use Transaction\Service\Transaction;

class TransactionController extends CrudController{
    public function __construct() {
        $this->title = $this->translate("Transações");
        $this->table = 'Transaction';
        $this->entity = 'Transaction\Entity\\'.$this->table ;
        $this->service = 'Transaction\Service\\'.$this->table ;
        $this->form = 'Transaction\Form\\'.$this->table ;
        $this->controller = "transaction";
        $this->route = "transaction/default";

        $this->_listView = array(
            'title' => $this->title,
            'icon' => 'hs-admin-exchange-vertical',
            'route' => $this->route,
            'controller' => $this->controller,
            'actions' => array(
                'enable' =>true,
                'defaults' => array(
                    'edit' => array(
                        'enable' => true,
                        'class' => 'btn btn-info',
                        'icon' => 'fa fa-edit',
                        'title' => 'Editar',
                        'authorize' => false
                    ),
                    'delete' => array(
                        'enable' => true,
                        'class' => 'btn btn-danger decision',
                        'icon' => 'fa fa-trash',
                        'title' => 'Excluir',
                        'authorize' => false
                    ),
                    'view' => array(
                        'enable' => false,
                        'class' => 'btn btn-info',
                        'icon' => 'fa fa-eye',
                        'title' => 'Visualizar'
                    ),
                ),
            ),
            'fields' => array(
                'id'=>array(
                    'label' => $this->translate('Id'),
                    'list' => true,
                ),
                'userPlan'=>array(
                    'label' => $this->translate('Plano do Usuário'),
                    'list' => true,
                ),
                'typeStr'=>array(
                    'label' => $this->translate('Tipo'),
                    'list' => true,
                ),
                'valueStr'=>array(
                    'label' => $this->translate('Valor'),
                    'list' => true,
                ),
                'cycle'=>array(
                    'label' => $this->translate('Ciclo'),
                    'list' => true,
                ),
                'categoryTransaction'=>array(
                    'label' => $this->translate('Categoria de Transação'),
                    'list' => true,
                ),
                'dateStr'=>array(
                    'label' => $this->translate('Data'),
                    'list' => true,
                ),
            ),
            'filters' => array(
                'user_plan' => array(
                    'label'     => 'Plano de Usuário',
                    'type'      => 'autocomplete',
                    'column'    => 'col-md-12'
                ),
                'cycle' => array(
                    'label'     => 'Ciclo',
                    'type'      => 'autocomplete',
                    'column'    => 'col-md-12'
                ),
                'category_transaction' => array(
                    'label'     => 'Categoria de Transações',
                    'type'      => 'custom',
                    'column'    => 'col-md-12'
                ),
                'type' => array(
                    'label'     => 'Tipo',
                    'type'      => 'select',
                    'column'    => 'col-md-12'
                ),
                'date' => array(
                    'label'     => 'Data',
                    'type'      => 'date',
                    'column'    => 'col-md-12'
                ),
            )
        );
    }

    public function indexAction($list = null, $count = 10)
    {
        $list = [];

        /**
         * @var \Transaction\Service\Transaction $service
         */
        $service = $this->getServiceLocator()->get($this->service);
        $list = $service->canList($this->entity);
        return parent::indexAction($list, $count); // TODO: Change the autogenerated stub
    }

}
